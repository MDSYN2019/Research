// -----------------------------------------------------------------------
// File adapted by Joe Boudreau from original example described in Linux
// Gazette by Rob Tougher, http://tldp.org/LDP/LG/issue74/tougher.html
// (2002).  The example was updated in 2013 to use standard exceptions and was
// endowed with a template method to allow exchange of arbitrary data
// structures via sockets.  
//-------------------------------------------------------------------------

#include <stdexcept>
template<class T> inline const ServerSocket& ServerSocket::operator << ( const T & query ) const
{
  if ( ! Socket::send ( query ) )
    {
      throw std::runtime_error ( "ServerSocket: could not write to socket." );
    }

  return *this;

}


template<class T> inline const ServerSocket& ServerSocket::operator >> ( T & query ) const
{
  if ( ! Socket::recv ( query ) )
    {
      throw std::runtime_error ( "ServerSocket: could not read from socket." );
    }

  return *this;
}


